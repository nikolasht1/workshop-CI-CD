name: CI/CD-Workshop

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: nikolasht1/flaskapi

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:

      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: flake8 Lint
        uses: py-actions/flake8@v2

  build_and_push:
    runs-on: ubuntu-latest
    name: Build and push docker image
    needs: lint
    outputs:
      commit_hash: ${{ steps.commit_hash.outputs.commit_hash }}
    steps:

      - name: Git checkout
        uses: actions/checkout@v3

      - id: commit_hash
        run: echo "::set-output name=commit_hash::${GITHUB_SHA::7}"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}:${{ steps.commit_hash.outputs.commit_hash }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: build_and_push
    env:
      HOST: 18.193.75.165
      HOST1: 3.73.116.209
      USERNAME: ubuntu
    steps:
      - name: Deploy to EC2 instanse via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ env.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: ${{ secrets.DOCKER_USER }}, ${{ secrets.DOCKER_TOKEN }}
          port: 22
          script: |
            # login docker
            sudo docker login -u $DOCKER_USER -p $DOCKER_TOKEN

            sudo docker stop flask-app

            sudo docker rm flask-app

            # Run a new container from a new image
            sudo docker run -d \
            --restart always \
            -p 80:5000 \
            --name flask-app \
            ${{ env.REGISTRY }}:${{ needs.build_and_push.outputs.commit_hash }}

      - name: Deploy to EC2 instanse via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST1}}
          username: ${{ env.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: ${{ secrets.DOCKER_USER }}, ${{ secrets.DOCKER_TOKEN }}
          port: 22
          script: |
            # login docker
            sudo docker login -u $DOCKER_USER -p $DOCKER_TOKEN

            sudo docker stop flask-app

            sudo docker rm flask-app

            # Run a new container from a new image
            sudo docker run -d \
            --restart always \
            -p 80:5000 \
            --name flask-app \
            ${{ env.REGISTRY }}:${{ needs.build_and_push.outputs.commit_hash }}
      
  report:
    runs-on: ubuntu-latest
    name: report
    needs: deploy
    steps: 
      - name: Checkout
        uses: actions/checkout@v2
      - name: Github Action gen-sh-unittest
        id: action-gen-sh-unittest
        uses: vargiuscuola/gen-sh-unittest@master
      - name: gensh-unittest result
        run: |           
          curl -I 18.193.75.165:80
 
          curl -I 3.73.116.209:80     